{"version":3,"sources":["Navbar.js","BlogList.js","useFetch.js","Home.js","Create.js","BlogDetails.js","NotFound.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","className","to","BlogList","blogs","title","map","blog","id","author","useFetch","url","useState","data","setData","isPending","setIsPending","error","setError","useEffect","abortCont","AbortController","setTimeout","fetch","signal","then","res","ok","Error","json","catch","err","name","console","log","message","abort","Home","Create","setTitle","body","setBody","setAuthor","history","useHistory","onSubmit","e","preventDefault","method","headers","JSON","stringify","push","type","required","value","onChange","target","disabled","BlogDetails","useParams","onClick","NotFound","App","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a246c8b9.chunk.js","sourcesContent":["import { Link } from 'react-router-dom';\r\n\r\nconst Navbar = () => {\r\n    return (  \r\n        <nav className=\"navbar\">\r\n            <h1>The Dojo Blog</h1>\r\n            <div className=\"links\">\r\n                <Link to =\"/\">Home</Link>\r\n                <Link to =\"/create\">New Blog</Link>\r\n            </div>\r\n        </nav>\r\n    );\r\n}\r\n \r\nexport default Navbar;","import { Link } from \"react-router-dom\";\r\n\r\nconst BlogList = ({ blogs, title}) => {\r\n    return (  \r\n        <div className=\"blog-list\">\r\n            <h2>{ title }</h2>\r\n            {blogs.map((blog) => (\r\n                <div className=\"blog-preview\" key={blog.id}>\r\n                    <Link to = {`/blogs/${blog.id}`}>\r\n                        <h2>{blog.title}</h2>\r\n                        <p>Written by {blog.author}</p>\r\n                    </Link>\r\n                </div>   \r\n            ))}\r\n        </div>\r\n    );\r\n}\r\n \r\nexport default BlogList;","import { useState, useEffect } from 'react';\r\n\r\nconst useFetch = (url) => {\r\n    const [data, setData] = useState(null);\r\n    const [isPending, setIsPending] = useState(true);\r\n    const [error, setError] = useState(null);\r\n\r\n    useEffect(() => {\r\n        const abortCont = new AbortController();\r\n\r\n        setTimeout(() => {\r\n            fetch(url, { signal: abortCont.signal })\r\n            .then(res => {   \r\n                if (!res.ok){\r\n                    throw Error('could not fetch the data for that resource');\r\n                }\r\n                return res.json();    \r\n            })\r\n            .then(data => {  \r\n                setIsPending(false);\r\n                setData(data);     \r\n                setError(null);  \r\n            })\r\n            .catch(err => {\r\n                if (err.name === 'AbortError'){\r\n                    console.log('fetch aborted');\r\n                }\r\n                else{\r\n                    setIsPending(false);\r\n                    setError(err.message);\r\n                }\r\n            })\r\n        }, 1000);\r\n\r\n        return () => abortCont.abort();\r\n    }, [url]);\r\n\r\n    return { data, isPending, error }\r\n}\r\n\r\nexport default useFetch;","import BlogList from './BlogList';\r\nimport useFetch from './useFetch';\r\n\r\nconst Home = () => {\r\n    const { data: blogs, isPending, error } = useFetch('http://localhost:8000/blogs');\r\n\r\n    return (  \r\n        <div className=\"home\">\r\n            { error && <div>{ error }</div>}\r\n            { isPending && <div>Loading...</div> }\r\n            {blogs && <BlogList blogs={blogs} title = \"All Blogs!\"  />}\r\n        </div>\r\n    );\r\n}\r\n \r\nexport default Home;","import { useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst Create = () => {\r\n    const [title, setTitle] = useState('');\r\n    const [body, setBody] = useState('');\r\n    const [author, setAuthor] = useState('mario');\r\n    const [isPending, setIsPending] = useState(false);\r\n    const history = useHistory();\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        const blog = { title, body, author };\r\n\r\n        setIsPending(true);\r\n\r\n        fetch('http://localhost:8000/blogs', {\r\n            method: 'POST',\r\n            headers: { \"Content-Type\": \"application/json\"},\r\n            body: JSON.stringify(blog)\r\n        }).then(() => {\r\n            console.log('new blog added');\r\n            setIsPending(false);\r\n\r\n            history.push('/');\r\n        });\r\n\r\n    }\r\n\r\n    return ( \r\n        <div className=\"create\">\r\n            <h2>Add a New Blog</h2>\r\n            <form onSubmit = {handleSubmit}>\r\n\r\n                <label>Blog title:</label>\r\n                <input\r\n                    type = \"text\"\r\n                    required\r\n                    value={title}\r\n                    onChange = {(e) => setTitle(e.target.value)}\r\n                />\r\n\r\n                <label>Blog body:</label>\r\n                <textarea\r\n                    required\r\n                    value={body}\r\n                    onChange = {(e) => setBody(e.target.value)}\r\n                ></textarea>\r\n\r\n                <label>Blog author:</label>\r\n                <select>\r\n                    value={author}\r\n                    onChange = {(e) => setAuthor(e.target.value)}\r\n                    <option value = \"mario\">mario </option>\r\n                    <option value = \"yoshi\">yoshi </option>\r\n                </select>\r\n                \r\n                { !isPending && <button>Add Blog</button> }\r\n                { isPending && <button disabled>Adding blog...</button> }\r\n            </form>\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default Create;","import { useHistory, useParams } from \"react-router-dom\";\r\nimport useFetch from \"./useFetch\";\r\n\r\nconst BlogDetails = () => {\r\n    const { id } = useParams();\r\n    const { data : blog, error, isPending } = useFetch('http://localhost:8000/blogs/' + id);\r\n    const history = useHistory();\r\n\r\n    const handleClick = () => {\r\n        fetch('http://localhost:8000/blogs/' + blog.id, {\r\n            method: 'DELETE'\r\n        }).then(() => {\r\n            history.push('/');\r\n        })\r\n    }\r\n\r\n    return ( \r\n        <div className=\"blog-details\">\r\n            { isPending && <div>Loading...</div>}\r\n            { error && <div>{ error } </div>}\r\n            { blog && (\r\n                <article>\r\n                    <h2>{ blog.title }</h2>\r\n                    <p>Written by { blog.author }</p>\r\n                    <div>{ blog.body } </div>\r\n                    <button onClick = {handleClick}>delete</button>\r\n                </article>\r\n            )}\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default BlogDetails;","import { Link } from \"react-router-dom\"\r\n\r\nconst NotFound = () => {\r\n    return (  \r\n        <div className=\"not-find\">\r\n            <h2>Sorry</h2>\r\n            <p>That page cannot be found</p>\r\n            <Link to = \"/\">Back to the homepage...</Link>\r\n        </div>\r\n    );\r\n}\r\n \r\nexport default NotFound;","import Navbar from './Navbar';\nimport Home from './Home';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport Create from './Create';\nimport BlogDetails from './BlogDetails';\nimport NotFound from './NotFound';\n\nfunction App() {\n  return (\n    <Router> \n      <div className=\"App\">\n        <Navbar />\n        <div className=\"content\">\n          <Switch>\n\n            <Route exact path = \"/\"> \n              <Home />\n            </Route>\n\n            <Route path = \"/create\"> \n              <Create />\n            </Route>\n\n            <Route path = \"/blogs/:id\"> \n              <BlogDetails />\n            </Route>\n\n            <Route path = \"*\">\n              <NotFound />\n            </Route>\n\n          </Switch>\n        </div>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}